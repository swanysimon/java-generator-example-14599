import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id "java"
    id "org.openapi.generator" version "6.3.0"
}

group = "example.example"
version = "0.0.1"

repositories { mavenCentral() }

java { toolchain { languageVersion.set(JavaLanguageVersion.of(11)) } }

sourceSets { main { java.srcDirs += "${buildDir}/generated/src/main/java" } }

dependencies {
    implementation "com.google.code.gson:gson:2.8.9"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.3"
    implementation "com.squareup.okhttp3:okhttp:4.9.3"
    implementation "com.squareup.okio:okio:2.8.0"
    implementation "io.gsonfire:gson-fire:1.8.5"
    implementation "io.swagger:swagger-core:1.6.9"
    implementation "javax.annotation:javax.annotation-api:1.3.2"
    implementation "javax.ws.rs:javax.ws.rs-api:2.1.1"
    implementation "org.openapitools:jackson-databind-nullable:0.2.2"
}

def generateSchemaTask = tasks.register("generateJavaClient", GenerateTask) {
    generatorName = "java"
    group = project.group
    version = project.version
    inputSpec = file("openapi.yaml").toString()
    outputDir = "${buildDir}/generated"
    apiPackage = "example.example.api"
    modelPackage = "example.example.api.model"
    configOptions = [
            dateLibrary            : "java8",
            hideGenerationTimestamp: "true",
    ]
}

tasks.withType(JavaCompile).configureEach { dependsOn generateSchemaTask }
